on:
  workflow_call:
    inputs:
      migration-guid:
        default: migration-archive-${{ github.event.issue.number }}
        type: string
      runner:
        default: self-hosted
        type: string
      ghes-ssh-host:
        type: string
        required: true
    secrets:
      GHES_ADMIN_TOKEN:
        required: true
      GHES_ADMIN_USERNAME:
        required: true

jobs:
  export:
    name: Export
    runs-on: ${{ inputs.runner }}

    if: github.event_name == 'issue_comment' &&
      (startsWith(github.event.comment.body, '/run-dry-run-migration') ||
      startsWith(github.event.comment.body, '/run-production-migration'))

    env:
      MIGRATION_GUID: ${{ inputs.migration-guid }}

    steps:
      - name: Check out scripts
        uses: actions/checkout@v2

      - name: Set migration type
        uses: actions/github-script@v5
        id: migration-type
        with:
          result-encoding: string
          script: |
            return context.payload.comment.body.match('dry-run') ? 'Dry-run' : 'Production'

      - name: Update issue with running state
        uses: actions/github-script@v5
        with:
          script: |
            const body = `:hourglass_flowing_sand: Running **${"${{ steps.migration-type.outputs.result }}".toLowerCase()}** migration. [View workflow run for details](${context.payload.repository.html_url}/actions/runs/${context.runId})`

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })

      - name: Parse repositories from issue body and write to file
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs')
            const parsedIssueBody = require('./.github/scripts/parse-issue-body.js')({context, core})
            
            fs.writeFileSync('repositories.txt', parsedIssueBody.repositories.trim().replace(/https:\/\/github.com\//g,''))

      - name: Create GitHub Enterprise Cloud migration archive
        uses: actions/github-script@v5
        with:
          script: |
            const fs = require('fs')
            
            const response = github.rest.migrations.startForOrg({
              org: context.repo.owner,
              repositories: fs.readFileSync('repositories.txt', 'utf8').split('\n'),
            });

            console.log(response.data);
